{"ast":null,"code":"var _jsxFileName = \"D:\\\\LMSFrontEnd\\\\lms\\\\src\\\\components\\\\LoginUser.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport RegisterLoginPage from './RegisterLoginPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginUser = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [loggedIn, setLoggedIn] = useState(false); // State to track login status\n\n  const handleLogin = async () => {\n    try {\n      const response = await axios.post('http://localhost:8080/api/users/login', {\n        username: username,\n        password: password\n      });\n      setMessage(response.data);\n      setLoggedIn(true); // Set loggedIn state to true upon successful login\n    } catch (error) {\n      setMessage(error.response.data);\n    }\n  };\n\n  // Conditional rendering based on login status\n  if (!loggedIn) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"If you don't have an account, \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/register\",\n          children: \"register here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 42\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(RegisterLoginPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this); // Render Dashboard component after successful login\n  }\n};\n_s(LoginUser, \"ummw3Psc0+fnVYSq7vBSAlil+Os=\");\n_c = LoginUser;\nexport default LoginUser;\nvar _c;\n$RefreshReg$(_c, \"LoginUser\");","map":{"version":3,"names":["React","useState","axios","Link","RegisterLoginPage","jsxDEV","_jsxDEV","LoginUser","_s","username","setUsername","password","setPassword","message","setMessage","loggedIn","setLoggedIn","handleLogin","response","post","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","to","_c","$RefreshReg$"],"sources":["D:/LMSFrontEnd/lms/src/components/LoginUser.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport RegisterLoginPage from './RegisterLoginPage';\r\n\r\nconst LoginUser = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [loggedIn, setLoggedIn] = useState(false); // State to track login status\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:8080/api/users/login', {\r\n        username: username,\r\n        password: password\r\n      });\r\n      setMessage(response.data);\r\n      setLoggedIn(true); // Set loggedIn state to true upon successful login\r\n    } catch (error) {\r\n      setMessage(error.response.data);\r\n    }\r\n  };\r\n\r\n  // Conditional rendering based on login status\r\n  if (!loggedIn) {\r\n    return (\r\n      <div>\r\n        <h2>User Login</h2>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Username\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <br />\r\n        <button onClick={handleLogin}>Login</button>\r\n        <p>{message}</p>\r\n        <p>If you don't have an account, <Link to=\"/register\">register here</Link>.</p>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <RegisterLoginPage />; // Render Dashboard component after successful login\r\n  }\r\n};\r\n\r\nexport default LoginUser;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}